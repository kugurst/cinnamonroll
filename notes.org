#-*- mode: org -*-
#+STARTUP: showall

* Configuration Notes
  + See -config/application.rb- to add =PasswordHash.rb= to the list of files to load
  + See -config/environments/development.rb- to set the networks allowed to access the web console
  + See -app/controllers/application_controller.rb- to set files that will be reloaded when changed.
  + See -config/boot.rb- to change the =rails server= bind address.
  + See -app/controllers/application_controller.rb- to configure what happens when not permitted parameters are encounterd  =ActionController::Parameters.action_on_unpermitted_parameters = false=

* Things to avoid
  + Text in the session only

* Practices
  + Place precompiled javascript files in -public/js-
    + Include these files by referencing ="/js/..."=

* Security
** Encryption Scheme
   + The client makes the RSA key.
   + The client sends a request.
     + If the client doesn't have an AES key, it sends a request to the server
   + The client decrypts the AES key using its private key, and then encrypts using the key and random IV.
   + Duplex communication is formed by server and client generating their own IV per communication.

* TODO List
** encrypt.coffee **
*** DONE Add that we are not encrypting to the sessionStorage (cinnamonroll.sec.NO_ENCRYPTION should go in sessionStorage)
*** TODO Check to see if cinnamonroll.sec.NO_ENCRYPTION is true before attempting to request an AES key (prevents clients that can't generate a key from repeatedly generating an RSA key)
*** TODO refactor the static code portion
*** DONE dynamically add "enc_" fields to forms so as not to screw up the actual forms on submission
*** DONE set encryption to false if HTTPS is active
** comments_controller.rb **
*** DONE Get the AES key from the session, not params
